'use strict';

// Unit link - https://learn.javascript.ru/ifelse

// Task 1
if ("0") {
  console.log( 'Привет' );
}  // alert выведется т.к. "0" - это строка, а любая непустая строка это true.

// Task 2
var name = prompt('Каково "официальное" название Javascript?', '');

if (name === 'EcmaScript') {
	console.log('Верно!');
} else {
	console.log('Не знаете? "EcmaScript"');
}

// Task 3
var num = prompt('Insert the number', '');

if (num > 0) {
	console.log(1);
} else if (num < 0) {
	console.log(-1);
} else {
	console.log(0);
}

// Task 4
var user = prompt('Кто пришел?', '');

if (user === null) {
	console.log('Вход отменен');
} else if (user === 'Админ') {

	var password = prompt('Пароль', '');

	if (password === 'Черный властелин') {
		console.log('Добро пожаловать!');
	} else if (password === null) {
		console.log('Вход отменен');
	} else {
		console.log('Пароль неверен');
	}
} else {
	console.log('Я вас не знаю');
}
	
// // Task 5
result = (a + b < 4) ? 'Мало' : 'Много';

// Task 6
var message;
var login = prompt('Login', '');

message = (login === 'Вася') ? 'Привет' :
(login === 'Директор') ? 'Здравствуйте' :
(login === '') ? 'Нет логина' : ''

console.log(message);	

// Unit link - https://learn.javascript.ru/logical-ops

// Task 1
console.log( null || 2 || undefined );
// выведет 2 т.к. это значение true и оператор ИЛИ заканчивает на нем вычисление и возвращает значение.

// Task 2
console.log( console.log(1) || 2 || console.log(3) );
//Сначала выполнится вызов console.log(1) тем самым выведется 1, но console.log возвращает значение undefined.
//Поэтому вычисления пойдут дальше и выведут значение 2. Т.к. это значение true, то на этом вычисления остановятся.

// Task 3
console.log( 1 && null && 2 );
//Выведется null, т.к. это значение false оператор И закончит на этом вычисления и вернет значения.

// Task 4
console.log( console.log(1) && console.log(2) );
//Сначала произойдет вызов console.log(1) тем самым выведется 1, но console.log возвращает значение undefined.
//Undefined это ложное значение, оператор И закончит на нем вычисления и вернет значение. Поэтому выведется undefied.

// Task 5
console.log( null || 2 && 3 || 4 );
//Выведется 3. У оператора И приоритет выше чем у ИЛИ, поэтому в первую очередь будет проверяться 2 && 3.
//Т.к. оба значения true, то вернется и будет использоваться в дальнейших вычислениях значение 3.
//null имеет логическое тип false, поэтому оператор ИЛИ пойдет дальше. 3 имеет логический тип true, поэтому оператор ИЛИ закончит вычисления и вернет это значение.

// Task 6
if (age >= 14 && age <= 90) {}

// Task 7
if (age < 14 || age > 90) {}
if ( !(age > 14 && age < 90) ) {}

// Task 8
if (-1 || 0) alert( 'первое' ); // выполнится, т.к. -1 в логическом типе true. На -1 закончатся вычисления и вернется значение.
if (-1 && 0) alert( 'второе' ); // не выполнится, т.к. оператор И остановится на 0, у 0 логическое значение false.
if (null || -1 && 1) alert( 'третье' ); // выполнится. В выражении -1 && 1 вернется значение 1, и в выражении null || 1 вернется значение 1, которое в логической форме true.

// Unit link - https://learn.javascript.ru/types-conversion

// Task 1
"" + 1 + 0 = '10' // + прибавляет 1 и затем 0 как строку.
"" - 1 + 0 = -1 // - преобразует "" в 0, т.к. работает только с числами.
true + false = 1 // т.к. true = 1 false = 0.
6 / "3" = 2 // т.к. оператор / работает только с цифрами, поэтому "3" преобразуется в число.
"2" * "3" = 6 // т.к. умножение работает только с числами.
4 + 5 + "px" = '9px' // сначала производится сложение чисел, затем их сумма складывается как строка со строкой 'px'.
"$" + 4 + 5 = '$45' // все операнды преобразуются в строку и выполняется сложение строк.

"4" - 2 = 2 // т.к. - работает только с числами, 4 преобразуется в число и производится вычитание.
"4px" - 2 = NaN // т.к. '4px' не может быть переведено в число и преобразуется в undefined. Undefined это NaN, а любые действия с NaN дают NaN. 
 
7 / 0 = Infinity // результат деления на ноль.

"  -9\n" + 5 = ' -9/n5' //т.к. 5 преобразуется в строку и происходит сложение строк.
"  -9\n" - 5 = -14 // т.к. - работает только с числами "  -9\n" преобразуется в -9.
5 && 2 = 2 // т.к. оператор И если отсутствует false выводит крайний true.

2 && 5 = 5 // аналогично предыдущему.

5 || 0 = 5 // т.к. оператор ИЛИ возвращает значение true

0 || 5 = 5 // т.к оператор ИЛИ возвращает значение true или крайний false
null + 1 = 1 // т.к. null преобразуется в 0
undefined + 1 = NaN // т.к. Undefined это NaN, а любые действия с NaN дают NaN. 
null == "\n0\n" = false // т.к. null равен самому себе либо undefined.
+null == +"\n0\n"	= true // т.к. обе части преобразовались в число.
